import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';
import 'package:chewie/chewie.dart';

void main() {
  runApp(MyApp());
}

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      home: WorkoutScreen(),
    );
  }
}

class WorkoutScreen extends StatefulWidget {
  @override
  _WorkoutScreenState createState() => _WorkoutScreenState();
}

class _WorkoutScreenState extends State<WorkoutScreen> {
  final List<Map<String, String>> workouts = [
    {"title": "Squat and Walk", "duration": "45 seconds", "videoPath": "assets/videos/a.mp4"},
    {"title": "Plie Squat and Heel Raises", "duration": "55 seconds", "videoPath": "assets/videos/b.mp4"},
    {"title": "Squat Kickback", "duration": "60 seconds", "videoPath": "assets/videos/c.mp4"},
  ];

  int? _selectedVideoIndex;
  late VideoPlayerController _videoController;
  ChewieController? _chewieController;

  @override
  void dispose() {
    _videoController.dispose();
    _chewieController?.dispose();
    super.dispose();
  }

  void _initializePlayer(int index) {
    if (_chewieController != null) {
      _chewieController!.dispose();
      _videoController.dispose();
    }

    _videoController = VideoPlayerController.asset(workouts[index]["videoPath"]!)
      ..initialize().then((_) {
        setState(() {
          _selectedVideoIndex = index;
          _chewieController = ChewieController(
            videoPlayerController: _videoController,
            aspectRatio: 16 / 9,
            autoPlay: true,
            looping: false,
          );
        });
      });
  }

  void _togglePlayPause() {
    setState(() {
      _videoController.value.isPlaying ? _videoController.pause() : _videoController.play();
    });
  }

  void _toggleMute() {
    setState(() {
      _videoController.setVolume(_videoController.value.volume == 0 ? 1.0 : 0.0);
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.white,
      body: Column(
        children: [
          Container(
            height: 300,
            decoration: BoxDecoration(
              color: Colors.blue,
              borderRadius: BorderRadius.only(
                bottomLeft: Radius.circular(30),
                bottomRight: Radius.circular(30),
              ),
            ),
            child: Center(
              child: _selectedVideoIndex == null
                  ? Text(
                "Workout Session",
                style: TextStyle(color: Colors.white, fontSize: 24, fontWeight: FontWeight.bold),
              )
                  : _chewieController != null && _videoController.value.isInitialized
                  ? Column(
                children: [
                  Expanded(child: Chewie(controller: _chewieController!)),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      IconButton(
                        icon: Icon(Icons.skip_previous, size: 36, color: Colors.white),
                        onPressed: _selectedVideoIndex! > 0 ? () => _initializePlayer(_selectedVideoIndex! - 1) : null,
                      ),
                      IconButton(
                        icon: Icon(
                          _videoController.value.isPlaying ? Icons.pause : Icons.play_arrow,
                          size: 36,
                          color: Colors.white,
                        ),
                        onPressed: _togglePlayPause,
                      ),
                      IconButton(
                        icon: Icon(
                          _videoController.value.volume == 0 ? Icons.volume_off : Icons.volume_up,
                          size: 36,
                          color: Colors.white,
                        ),
                        onPressed: _toggleMute,
                      ),
                      IconButton(
                        icon: Icon(Icons.skip_next, size: 36, color: Colors.white),
                        onPressed: _selectedVideoIndex! < workouts.length - 1
                            ? () => _initializePlayer(_selectedVideoIndex! + 1)
                            : null,
                      ),
                    ],
                  ),
                ],
              )
                  : CircularProgressIndicator(color: Colors.white),
            ),
          ),
          Expanded(
            child: Padding(
              padding: const EdgeInsets.all(16.0),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    "Circuit 1: Legs Toning",
                    style: TextStyle(fontSize: 22, fontWeight: FontWeight.bold),
                  ),
                  SizedBox(height: 5),
                  Row(
                    children: [
                      Icon(Icons.loop, color: Colors.blue),
                      SizedBox(width: 5),
                      Text("3 sets", style: TextStyle(color: Colors.blue, fontSize: 16)),
                    ],
                  ),
                  SizedBox(height: 15),
                  Expanded(
                    child: ListView.separated(
                      itemCount: workouts.length,
                      separatorBuilder: (_, __) => SizedBox(height: 10),
                      itemBuilder: (context, index) {
                        return _buildWorkoutItem(
                          context,
                          workouts[index]["title"]!,
                          workouts[index]["duration"]!,
                          index,
                        );
                      },
                    ),
                  ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildWorkoutItem(BuildContext context, String title, String duration, int index) {
    return Card(
      elevation: 2,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(12)),
      child: ListTile(
        leading: Icon(Icons.play_circle_fill, color: Colors.blue, size: 40),
        title: Text(title, style: TextStyle(fontSize: 18, fontWeight: FontWeight.w600)),
        subtitle: Text(duration, style: TextStyle(fontSize: 14, color: Colors.grey)),
        onTap: () => _initializePlayer(index),
      ),
    );
  }
}
